<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolTip1.Location" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="DBGrid1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        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
        b3dGb2N1cwAPAAAADwAAAEFsbG93Um93U2l6aW5nAAQAAAAMAAAAQWxsb3dTaXppbmcAAQAAAAcAAABM
        b2NrZWQAHwAAAA0AAABNYXJxdWVlU3R5bGUAEAAAABAAAABSZWNvcmRTZWxlY3RvcnMAEQAAAAsAAABT
        Y3JvbGxCYXJzAAMAAAAMAAAAU2Nyb2xsR3JvdXAABgAAAAUAAABTaXplAAcAAAAJAAAAU2l6ZU1vZGUA
        AwIAAA0AAABfQ29sdW1uUHJvcHMABgIAAAsAAABfVXNlckZsYWdzAAAACwAAAAAAAAALAAAAAAAAAAsA
        AAD//wAAAwAAAAEAAAADAAAAAQAAAAsAAAD//wAAAwAAAAAAAAAEAAAAAAAAAAsAAAD//wAARgAAAB8A
        AAADUuMLkY/OEZ3jAKoAS7hRAYYAAJABkF8BAATLzszlAAQAAAAAAIA/CwAAAP//AAACAAAAAgAAAAMA
        AAD//8AAAwAAAAgAAIAeAAAACQAAALLp0a+94bn7AAAAAEYAAAAfAAAAA1LjC5GPzhGd4wCqAEu4UQGG
        AACQAZBfAQAEy87M5QALAAAA//8AAAsAAAAAAAAAAwAAAAAAAAALAAAAAAAAAB0AAAAAAAAABQAAAEZv
        bnQAAgAAAAwAAABBbGxvd0FkZE5ldwAvAAAADAAAAEFsbG93QXJyb3dzAAEAAAAMAAAAQWxsb3dEZWxl
        dGUABAAAAAwAAABBbGxvd1VwZGF0ZQD4/f//CwAAAEFwcGVhcmFuY2UAC/7//woAAABCYWNrQ29sb3IA
        CP7//wwAAABCb3JkZXJTdHlsZQD6/f//CAAAAENhcHRpb24ABwAAAA4AAABDb2x1bW5IZWFkZXJzAAgA
        AAAIAAAAQ29sdW1ucwAlAAAACQAAAERhdGFNb2RlAAoAAAAMAAAARGVmQ29sV2lkdGgA/v3//wgAAABF
        bmFibGVkAAD+//8FAAAARm9udAD//f//CgAAAEZvcmVDb2xvcgALAAAACQAAAEhlYWRGb250AAwAAAAK
        AAAASGVhZExpbmVzAEoAAAAOAAAATWFycXVlZVVuaXF1ZQAPAAAAEAAAAFJvd0RpdmlkZXJTdHlsZQAj
        AAAABwAAAFNwbGl0cwAxAAAAEAAAAFRhYkFjcm9zc1NwbGl0cwAyAAAACgAAAFRhYkFjdGlvbgAzAAAA
        EAAAAFdyYXBDZWxsUG9pbnRlcgDTBwAACQAAAF9FeHRlbnRYANQHAAAJAAAAX0V4dGVudFkAAAIAAAwA
        AABfTGF5b3V0VHlwZQAQAAAACwAAAF9Sb3dIZWlnaHQA1wcAAAkAAABfVmVyc2lvbgCgPtAL
</value>
  </data>
</root>